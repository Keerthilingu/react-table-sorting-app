{"version":3,"sources":["components/Articles.js","App.js","serviceWorker.js","index.js","data/ARTICLES.js"],"names":["Articles","data-testid","this","props","article","title","upvotes","date","React","Component","App","articles","useState","sortBy","setCriteria","listItems","sort","a","b","Date","className","onClick","disabled","id","map","item","key","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.96704569.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Articles extends React.Component {\r\n    render() {\r\n        return (\r\n            \r\n                <tbody>\r\n                    <tr data-testid=\"article\">\r\n                        <td data-testid=\"article-title\">\r\n                            {this.props.article.title}\r\n                        </td>\r\n                        <td data-testid=\"article-upvotes\">\r\n                            {this.props.article.upvotes}\r\n                        </td>\r\n                        <td data-testid=\"article-date\">\r\n                            {this.props.article.date}\r\n                        </td>\r\n                    </tr>\r\n                </tbody>                          \r\n                \r\n        );\r\n    }\r\n}\r\n\r\nexport default Articles;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Articles from \"./components/Articles.js\";\r\n\r\n\r\nconst title = \"React Sorting Articles\";\r\n\r\nfunction App({ articles }) {\r\n    const [sortBy, setCriteria] = useState(\"upvotes\");\r\n\r\n    let upVoteBtn = () => {\r\n        setCriteria(\"upvotes\");\r\n    };\r\n\r\n    let recentBtn = () => {\r\n        setCriteria(\"date\");\r\n    };\r\n\r\n    let listItems = [...articles];\r\n\r\n    switch (sortBy) {\r\n        case \"upvotes\":\r\n            listItems.sort((a, b) => b.upvotes - a.upvotes);\r\n            break;\r\n\r\n        case \"date\":\r\n            listItems.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n            break;\r\n        \r\n        default:\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div>\r\n                <label className = \"App-header\">\r\n                    {title}\r\n                </label>\r\n                <button\r\n                    data-testid=\"most-upvoted-link\"\r\n                    className=\"myButton\"\r\n                    onClick={upVoteBtn}\r\n                    disabled={sortBy === 'upvotes'}\r\n                >\r\n                    Most Upvoted\r\n                </button>\r\n                <button\r\n                    data-testid=\"most-recent-link\"\r\n                    className=\"myButton\"\r\n                    onClick={recentBtn}\r\n                    disabled={sortBy === 'date'}\r\n                >\r\n                    Most Recent\r\n                </button>\r\n            </div>\r\n            <div >\r\n                <table id= \"customers\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Title</th>\r\n                            <th>Upvotes</th>\r\n                            <th>Date</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {listItems.map((item) => (\r\n                        <Articles\r\n                            article={item}\r\n                            key={item.title}\r\n                            sortBy={sortBy}\r\n                        />\r\n                    ))}\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ARTICLES } from './data/ARTICLES';\n\n\nReactDOM.render(<App articles={ARTICLES} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n","export const ARTICLES = [\r\n  {\r\n    title: \"A message to our customers\",\r\n    upvotes: 12,\r\n    date: \"2020-01-24\",\r\n  },\r\n  {\r\n    title: \"Alphabet earnings\",\r\n    upvotes: 22,\r\n    date: \"2019-11-23\",\r\n  },\r\n  {\r\n    title: \"Artificial Mountains\",\r\n    upvotes: 2,\r\n    date: \"2019-11-22\",\r\n  },\r\n  {\r\n    title: \"Scaling to 100k Users\",\r\n    upvotes: 72,\r\n    date: \"2019-01-21\",\r\n  },\r\n  {\r\n    title: \"the Emu War\",\r\n    upvotes: 24,\r\n    date: \"2019-10-21\",\r\n  },\r\n  {\r\n    title: \"What's SAP\",\r\n    upvotes: 1,\r\n    date: \"2019-11-21\",\r\n  },\r\n  {\r\n    title: \"Simple text editor has 15k monthly users\",\r\n    upvotes: 7,\r\n    date: \"2010-12-31\",\r\n  },\r\n];\r\n"],"sourceRoot":""}